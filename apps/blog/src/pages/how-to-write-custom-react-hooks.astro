---
import { getEntry } from "astro:content";
import Post from "../layouts/post.astro";
import { getCollection } from "astro:content";
import Content, { type ContentItem } from "../layouts/content.astro";

const authorCollection = await getCollection("authors");

const authorIds = ["david"];

const authors = authorCollection.filter((author) =>
  authorIds.includes(author.slug),
);

const editorIds = ["velimir"];

const editors = authorCollection.filter((editor) =>
  editorIds.includes(editor.slug),
);

export const data = {
  title: "How to write custom React hooks? - Code Exercises",
  image: "/images/how-to-write-custom-react-hooks.png",
  createdAt: 1675873546123,
  updatedAt: 1675873546123,
  category: "Learn Javascript",
};

const slug = "/how-to-write-custom-react-hooks.astro";

const intro = await getEntry(
  "partials",
  "how-to-write-custom-react-hooks/10-intro",
);
const { Content: Intro } = await intro!.render();

const useMousePosition = await getEntry(
  "partials",
  "how-to-write-custom-react-hooks/20-use-mouse-position",
);
const { Content: UseMousePosition } = await useMousePosition!.render();

const useMousePositionSolution = await getEntry(
  "partials",
  "how-to-write-custom-react-hooks/25-use-mouse-position-solution",
);
const { Content: UseMousePositionSolution } =
  await useMousePositionSolution!.render();

const useClickCounter = await getEntry(
  "partials",
  "how-to-write-custom-react-hooks/30-use-click-counter",
);
const { Content: UseClickCounter } = await useClickCounter!.render();

const useClickCounterSolution = await getEntry(
  "partials",
  "how-to-write-custom-react-hooks/35-use-click-counter-solution",
);
const { Content: UseClickCounterSolution } =
  await useClickCounterSolution!.render();

const useClickTracker = await getEntry(
  "partials",
  "how-to-write-custom-react-hooks/40-use-click-tracker",
);
const { Content: UseClickTracker } = await useClickTracker!.render();

const useClickTrackerSolution = await getEntry(
  "partials",
  "how-to-write-custom-react-hooks/45-use-click-tracker-solution",
);
const { Content: UseClickTrackerSolution } =
  await useClickTrackerSolution!.render();

const useFetchData = await getEntry(
  "partials",
  "how-to-write-custom-react-hooks/50-use-fetch-data",
);
const { Content: UseFetchData } = await useFetchData!.render();

const useFetchDataSolution = await getEntry(
  "partials",
  "how-to-write-custom-react-hooks/55-use-fetch-data-solution",
);
const { Content: UseFetchDataSolution } = await useFetchDataSolution!.render();

const useDebouncedSearch = await getEntry(
  "partials",
  "how-to-write-custom-react-hooks/60-use-debounced-search",
);
const { Content: UseDebouncedSearch } = await useDebouncedSearch!.render();

const useDebouncedSearchSolution = await getEntry(
  "partials",
  "how-to-write-custom-react-hooks/65-use-debounced-search-solution",
);
const { Content: UseDebouncedSearchSolution } =
  await useDebouncedSearchSolution!.render();

const contentList: ContentItem[] = [
  {
    title: "useMousePosition",
    href: "#usemouseposition"
  },
  {
    title: "useClickCounter",
    href: "#useclickcounter"
  },
  {
    title: "useClickTracker",
    href: "#useclicktracker"
  },
  {
    title: "useFetchData",
    href: "#usefetchdata"
  },
  {
    title: "useDebouncedSearch",
    href: "#usedebouncedsearch"
  }
];
---

<Post
  title={data.title}
  image={data.image}
  createdAt={data.createdAt}
  updatedAt={data.updatedAt}
  author={authors[0]}
  editor={editors[0]}
  slug={slug}
  category={data.category}
>
  <Intro />
  <Content contentList={contentList} />
  {/* Contents */}
  <UseMousePosition />
  {/* Demo */}
  <UseMousePositionSolution />
  <UseClickCounter />
  {/* Demo */}
  <UseClickCounterSolution />
  <UseClickTracker />
  {/* Demo */}
  <UseClickTrackerSolution />
  <UseFetchData />
  {/* Demo */}
  <UseFetchDataSolution />
  <UseDebouncedSearch />
  {/* Demo */}
  <UseDebouncedSearchSolution />
</Post>
