---
import { getEntry } from "astro:content";
import Post from "../../layouts/post.astro";
import { getCollection } from "astro:content";
import Content, { type ContentItem } from "../../layouts/content.astro";
import ListOfItemsDemo from "../../content/partials/the-dom-exercises/demos/ListOfItems/demo";
import CroCoderLogoDemo from "../../content/partials/the-dom-exercises/demos/CroCoderLogo/demo";

export async function getData() {
  const authorCollection = await getCollection("authors");

  const authorIds = ["david"];

  const authors = authorCollection.filter((author) =>
    authorIds.includes(author.slug),
  );

  const editorIds = ["velimir"];

  const editors = authorCollection.filter((editor) =>
    editorIds.includes(editor.slug),
  );

  return {
    title: "JavaScript DOM - Code Exercises",
    description:
      "The DOM or the Document Object Model of the page is created after the web page is loaded. Learn some DOM manipulation with these exercises.",
    image: "/images/dom.jpg",
    createdAt: 1619463600000,
    updatedAt: 1675249865796,
    authors,
    editors,
    abstract:
      "It's really hard to test your programming knowledge after you have completed a tutorial or a lecture. We have prepared some exercises to help out beginner devs to solidify their understanding of the DOM. Every exercise has a brief description of the problem, starting code, links to relevant MDN docs, and expected results. Try to solve the problems without taking a peek at the solution.",
    category: "Learn Javascript",
  };
}

export const data = await getData();

const slug = "/the-dom-exercises.astro";

const intro = await getEntry("partials", "the-dom-exercises/10-intro");
const { Content: Intro } = await intro!.render();

const fruitList = await getEntry("partials", "the-dom-exercises/20-fruit-list");
const { Content: FruitList } = await fruitList!.render();

const crocoderLogo = await getEntry(
  "partials",
  "the-dom-exercises/30-crocoder-logo",
);
const { Content: CrocoderLogo } = await crocoderLogo!.render();

const crocoderLogoSolution = await getEntry(
  "partials",
  "the-dom-exercises/35-crocoder-logo-solution",
);
const { Content: CrocoderLogoSolution } = await crocoderLogoSolution!.render();

const unorderedList = await getEntry(
  "partials",
  "the-dom-exercises/40-unordered-list",
);
const { Content: UnorderedList } = await unorderedList!.render();

const listOfItems = await getEntry(
  "partials",
  "the-dom-exercises/50-list-of-items",
);
const { Content: ListOfItems } = await listOfItems!.render();

const listOfItemsSolution = await getEntry(
  "partials",
  "the-dom-exercises/55-list-of-items-solution",
);
const { Content: ListOfItemsSolution } = await listOfItemsSolution!.render();

const contentList: ContentItem[] = [
  {
    title: "Fruit list",
    href: "#fruit-list",
  },
  {
    title: "CroCoder logo",
    href: "#crocoder-logo",
  },
  {
    title: "Change first and last item from an unordered list",
    href: "#change-first-and-last-item-from-an-unordered-list",
  },
  {
    title: "List of items",
    href: "#list-of-items",
  },
];
---

<Post
  title={data.title}
  image={data.image}
  createdAt={data.createdAt}
  updatedAt={data.updatedAt}
  description={data.description}
  abstract={data.abstract}
  author={data.authors[0]}
  editor={data.editors[0]}
  slug={slug}
  category={data.category}
>
  <Intro />
  <Content contentList={contentList} />
  <FruitList />
  <CrocoderLogo />
  <CroCoderLogoDemo />
  <CrocoderLogoSolution />
  <UnorderedList />
  <ListOfItems />
  <ListOfItemsDemo client:load />
  <ListOfItemsSolution />
</Post>
