---
import { getImage } from "astro:assets";
import crocoderLogo from "../assets/crocoder-logo.png";
import "../styles/navigation.css";

const optimizedLogo = await getImage({
  src: crocoderLogo,
  width: 63,
  height: 51,
  format: "webp",
});
---

<header class="fixed m-auto
    top-0
    md:mx-2
    md:top-1
    z-50">
  <nav
    class="animated-navigation
    inline-flex
    justify-between
    items-center
    bg-[#3C3843E5]
      mx-auto
      py-[10px]
      px-7
      md:px-[15px]
      md:rounded-l-[3rem]
      md:rounded-r-lg
      md:overflow-hidden
      relative
      gap:12
      max-md:has-[input:checked]:bg-secondary"
    data-navhidden="false"
  >
  <a class="sm:flex sm:items-center flex-none" href="/" aria-label="Crocoder Logo">
      <img
        src={optimizedLogo.src}
        alt="Crocoder Crocodile Logo"
        width="63"
        height="51"
        class="h-[51px] w-auto "
        loading="eager"
      />
       <img
        width={153}
        height={24}
        alt="Crocoder Text Logo"
        src="/images/crocoder-text.svg"
        class="pl-[14px] h-6 w-auto animated-button"
        data-navhidden="false"
      /> 
    </a>
    <ul
      id="mobile-contact"
      class="flex 2max-md:flex max-md:ml-auto max-md:mr-4 md:hidden"
    >
      <li>
        <a
          class="flex font-medium w-fit h-[45px] items-center px-4 py-2 rounded-md text-base text-center whitespace-nowrap bg-crocoder-yellow text-contrast hover:opacity-90"
          href="/contact"
        >
          Contact us
        </a>
      </li>
    </ul>

    <input
      id="nav-menu-toggle"
      type="checkbox"
      readonly
      class="hidden peer/menu-toggle"
    />
    <label
      for="nav-menu-toggle"
      class="md:hidden
      flex
      flex-col
      gap-1.5"
    >
      <span class="h-0.5 w-6 bg-neutral-50"></span>
      <span class="h-0.5 w-6 bg-neutral-50"></span>
      <span class="h-0.5 w-6 bg-neutral-50"></span>
    </label> 

    <ul class="flex items-center overflow-hidden">
        <li data-navhidden="true" class="animated-text">
          <a
            class="whitespace-nowrap font-medium text-2xl md:text-lg text-[#E8E8E8] hover:text-white"
            href="/for-ctos"
          >
            For CTOs
          </a>
        </li>
        <li data-navhidden="true" class="animated-text ">
          <a
            class="whitespace-nowrap  font-medium mr-7 text-2xl md:text-lg text-[#E8E8E8] hover:text-white"
            href="/blog"
          >
            Blog
          </a>
        </li>
        <li class="ml-auto">
          <a data-navhidden="true"
            id="book-a-call-action"
            class=" 
            mr-2
            w-fit font-medium h-[39px] 
            items-center px-4 py-2 rounded-md 
            animated-button
            text-base text-center 
            whitespace-nowrap
             bg-[#545664] text-[#ffffff] hover:opacity-90"
            
            href="#book-a-call-section">Book a call</a
          >
        </li>
        <li  class="">
          <a
            class="font-medium inline-block
            w-fit !h-[39px] items-center px-4 py-2 rounded-md 
            text-base text-center whitespace-nowrap bg-crocoder-yellow text-contrast hover:opacity-90"
            href="/contact"
          >
            Contact us
          </a>
        </li>
      </ul>
  </nav>
</header>

<script is:inline>
  let lastScrollTop = 0;
  let isScroll = false;

  const allDataHidden = document.querySelectorAll("[data-navhidden]");
  const bookACallAction = document.getElementById("book-a-call-action");
  const navMenuToggle = document.getElementById("nav-menu-toggle");
  const mobileContact = document.getElementById("mobile-contact");

  function onScroll() {
    const currentScrollTop =
      window.scrollY || document.documentElement.scrollTop;

    if (!isScroll) {
      isScroll = true;
      window.requestAnimationFrame(() => {
        handleScroll(currentScrollTop);
        isScroll = false;
      });
    }
  }

  function handleScroll(currentScrollTop) {
    if (
      currentScrollTop > lastScrollTop &&
      allDataHidden[0].getAttribute("data-navhidden") === "true"
    ) {
      invertDataAttributte(allDataHidden);
    } else if (
      currentScrollTop <= lastScrollTop &&
      allDataHidden[0].getAttribute("data-navhidden") === "false"
    ) {
      invertDataAttributte(allDataHidden);
    }

    lastScrollTop = currentScrollTop <= 0 ? 0 : currentScrollTop;
  }

  function invertDataAttributte(dataHiddenNodes) {
    dataHiddenNodes.forEach((node) => {
      if (node.closest("li")?.textContent?.includes("Contact us")) return;

      const currentVal = node.getAttribute("data-navhidden");
      node.setAttribute("data-navhidden", currentVal === "true" ? "false" : "true");

      node.style.animationName = "none";
      void node.offsetWidth;
      node.style.animationName = "";
    });
  }

  navMenuToggle.addEventListener("change", () => {
    mobileContact.classList.toggle("hidden", navMenuToggle.checked);
  });

  function handleBookACall() {
    navMenuToggle.checked = false;
    window.navScroll = true;

    setTimeout(() => {
      window.navScroll = false;
    }, 1500);
  }

  window.addEventListener("scroll", onScroll, { passive: true });
  bookACallAction.addEventListener("click", handleBookACall);
</script>
