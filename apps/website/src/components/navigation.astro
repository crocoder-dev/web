<header
  class="fixed
    m-auto
    mx:0
    top-0
    w-full
    md:mx-2
    md:top-4
    md:w-auto
    z-50"
>
  <nav
    class="bg-[#3C3843E5]
        flex
        items-center
        justify-between
        py-3
        px-2
        sm:px-4
        md:rounded-l-[3rem]
        md:rounded-r-lg
        overflow-hidden"
  >
    <a
      class="hidden sm:flex sm:items-center"
      href="/"
      aria-label="Crocoder Logo"
    >
      <img
        width={64}
        height={30}
        alt="Crocoder Crocodile Logo"
        src="./images/crocoder-logo.png"
        class="ml-[-2px] h-[48px] w-auto"
      />
      <img
        width={153}
        height={24}
        alt="Crocoder Text Logo"
        src="./images/crocoder-text.svg"
        class="pl-2 hidden h-6 w-auto md:block"
        id="crocoder-logo"
      />
    </a>
    <ul id="nav-list" class="flex gap-4 mx-2 md:mx-16">
      <li>
        <a
          class="font-medium text-lg text-[#E8E8E8] hover:text-white"
          href="/blog"
        >
          Blog
        </a>
      </li>
    </ul>
    <ul class="flex gap-4">
      <li>
        <a
          class="flex font-medium h-[45px] items-center px-4 py-2 rounded-md text-base text-center whitespace-nowrap bg-[#545664] text-[#ffffff] hover:opacity-90"
          href="#book-a-call">Book a call</a
        >
        <li>
          <a
            class="flex font-medium h-[45px] items-center px-4 py-2 rounded-md text-base text-center whitespace-nowrap bg-[#FEC343] text-[#1E1A1A] hover:opacity-90"
            href="/contact"
          >
            Contact us
          </a>
        </li>
      </li>
    </ul>
  </nav>
</header>
<script is:inline>
  function throttle(func, limit) {
    let lastFunc;
    let lastRan;
    return function () {
      const context = this;
      const args = arguments;
      if (!lastRan) {
        func.apply(context, args);
        lastRan = Date.now();
      } else {
        clearTimeout(lastFunc);
        lastFunc = setTimeout(
          function () {
            if (Date.now() - lastRan >= limit) {
              func.apply(context, args);
              lastRan = Date.now();
            }
          },
          limit - (Date.now() - lastRan),
        );
      }
    };
  }

  const down =
    "md:!max-w-0 md:!mx-0 md:overflow-hidden md:transition-all".split(" ");
  const up = "md:max-w-48 md:transition-all".split(" ");

  const logo = document.querySelector("#crocoder-logo");
  const navList = document.querySelector("#nav-list");

  let lastScrollTop = 0;

  function handleScroll() {
    let currentScrollTop = window.scrollY || document.documentElement.scrollTop;

    if (
      currentScrollTop > lastScrollTop &&
      !logo.classList.contains(...down) &&
      !navList.classList.contains(...down)
    ) {
      console.log("down");
      logo.classList.remove(...up);
      logo.classList.add(...down);

      navList.classList.remove(...up);
      navList.classList.add(...down);
    } else if (
      currentScrollTop <= lastScrollTop &&
      !logo.classList.contains(...up) &&
      !navList.classList.contains(...up)
    ) {
      console.log("up");
      logo.classList.remove(...down);
      logo.classList.add(...up);

      navList.classList.remove(...down);
      navList.classList.add(...up);
    }

    lastScrollTop = currentScrollTop <= 0 ? 0 : currentScrollTop;
  }

  window.addEventListener("scroll", throttle(handleScroll, 200));
</script>
