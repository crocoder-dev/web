---
import { getImage } from "astro:assets";
import crocoderLogo from "../assets/crocoder-logo.png";
import Menu from "./Menu.astro";
import MenuItem from "./MenuItem.astro";

const optimizedLogo = await getImage({
  src: crocoderLogo,
  width: 63,
  height: 51,
  format: "webp",
});

const caseStudies = [
  {
    title: "Refactoring Legacy UI",
    href: "/blog/how-we-rebuilt-a-legacy-ui-with-zero-downtime",
  },
  {
    title: "Implementing billing system",
    href: "/blog/using-lago-to-create-a-flexible-billing-system",
  },
  {
    title: "Empowering Frontend Migration",
    href: "/blog/migrating-an-enterprise-app-from-angularjs-to-react",
  },
];
---

<header
  class="fixed m-auto
    top-0
    md:mx-2
    md:top-1
    z-50
    w-full flex flex-col"
>
  <nav
    id="nav-bar"
    class="inline-flex
      w-full
      justify-between
      items-center
      bg-[#3C3843E5]
      mx-auto
      py-[10px]
      px-7
      md:px-[15px]
      md:rounded-l-[3rem]
      md:rounded-r-lg
      relative
      md:w-[780px]"
    data-navhidden="false"
  >
    <a
      class="sm:flex sm:items-center flex-none"
      href="/"
      aria-label="Crocoder Logo"
    >
      <img
        src={optimizedLogo.src}
        alt="Crocoder Crocodile Logo"
        class="h-[51px] w-auto"
        loading="eager"
      />
      <img
        id="logo"
        alt="Crocoder Text Logo"
        src="/images/crocoder-text.svg"
        class="pl-[14px] h-6 w-[154px] hidden md:flex"
        data-navhidden="false"
      />
    </a>
    <ul
      id="mobile-contact"
      class="flex 2max-md:flex max-md:ml-auto max-md:mr-4 md:hidden"
    >
      <li>
        <a
          class="flex font-medium w-fit h-[45px] items-center px-4 py-2 rounded-md text-base text-center whitespace-nowrap bg-crocoder-yellow text-contrast hover:opacity-90"
          href="/contact"
        >
          Contact us
        </a>
      </li>
    </ul>

    <button
      id="nav-menu-toggle"
      aria-expanded="false"
      aria-controls="mobile-list"
      aria-label="Toggle menu"
      class="md:hidden flex flex-col gap-1.5"
    >
      <span id="top-line" class="h-0.5 w-6 bg-neutral-50 line line1"></span>
      <span id="middle-line" class="h-0.5 w-6 bg-neutral-50 line line2"></span>
      <span id="bottom-line" class="h-0.5 w-6 bg-neutral-50 line line3"></span>
    </button>

    <ul class="hidden items-center md:flex">
      <li id="for-ctos" data-navhidden="true" class="m-2">
        <a
          class="whitespace-nowrap font-medium text-2xl md:text-lg text-light-gray hover:text-white"
          href="/for-ctos"
        >
          For CTOs
        </a>
      </li>
      <li id="blog" data-navhidden="true" class="m-2">
        <a
          class="whitespace-nowrap font-medium text-2xl md:text-lg text-light-gray hover:text-white"
          href="/blog"
        >
          Blog
        </a>
      </li>
      <li id="case-study" data-navhidden="true" class="m-2">
        <Menu title={"Case Studies"}>
          {
            caseStudies.map((item) => (
              <MenuItem>
                <a href={item.href}>{item.title}</a>
              </MenuItem>
            ))
          }
        </Menu>
      </li>
      <li id="book-a-call-container" class="ml-auto pr-2">
        <a
          data-navhidden="true"
          id="book-a-call-action"
          class="invisible w-fit font-medium h-[39px] items-center px-4 py-2 rounded-md text-base text-center whitespace-nowrap bg-[#545664] text-[#ffffff] hover:opacity-90"
          href={"#book-a-call-section"}
        >
          Book a call
        </a>
      </li>
    </ul>
    <div class="hidden md:inline-block">
      <a
        class="font-medium
          w-fit !h-[39px] items-center px-4 py-2 rounded-md
          text-base text-center whitespace-nowrap bg-crocoder-yellow text-contrast hover:opacity-90
          inline-block"
        href="/contact"
      >
        Contact us
      </a>
    </div>
  </nav>
  <div
    id="mobile-list"
    class="relative px-7 py-4 gap-5 bg-secondary hidden flex-col h-full peer/menu-toggle text-left"
  >
    <a
      class="whitespace-nowrap font-medium text-2xl md:text-lg text-light-gray hover:text-white min-h-10"
      href="/for-ctos"
    >
      For CTOs
    </a>
    <a
      class="whitespace-nowrap font-medium text-2xl md:text-lg text-light-gray hover:text-white min-h-10"
      href="/blog"
    >
      Blog
    </a>
    <div
      class="whitespace-nowrap flex flex-col gap-3 font-medium text-light-gray"
    >
      <span class="uppercase text-lg">Case Studies</span>

      {
        caseStudies.map((item) => (
          <a class="text-xl hover:text-white text-wrap min-h-8" href={item.href}>
            {item.title}
          </a>
        ))
      }
    </div>
    <a
      data-navhidden="true"
      id="mobile-book-a-call-action"
      class="w-full
            font-medium h-[40px]
            items-center px-4 py-2 rounded-md
            text-base text-center
            whitespace-nowrap
             bg-[#545664] text-[#ffffff] hover:opacity-90"
      href={"#book-a-call-section"}
    >
      Book a call
    </a>
    <a
      class="font-medium
          w-full !h-[40px] items-center px-4 py-2 rounded-md
          text-base text-center whitespace-nowrap bg-crocoder-yellow text-contrast hover:opacity-90
          inline-block"
      href="/contact"
    >
      Contact us
    </a>
  </div>
</header>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);
  let mm = gsap.matchMedia();

  const NAV_SHRINK_WIDTH = "377px";
  const NAV_EXPAND_WIDTH = "780px";
  const FRAME_DURATION = 0.425;

  const navBar = document.getElementById("nav-bar");
  const logoElem = document.getElementById("logo");
  const forCtoElem = document.getElementById("for-ctos");
  const blogElem = document.getElementById("blog");
  const caseStudyElem = document.getElementById("case-study");
  const bookACallAction = document.getElementById("book-a-call-action");
  const containerElement = document.getElementById("book-a-call-container");
  const mobileBookACallAction = document.getElementById(
    "mobile-book-a-call-action",
  );

  const mobileContact = document.getElementById("mobile-contact");
  const mobileList = document.getElementById("mobile-list");
  const navMenuToggle = document.getElementById("nav-menu-toggle");

  mm.add("(width >= 768px)", () => {
    if (!navBar || !bookACallAction) return;

    const navHideItems = [forCtoElem, blogElem, logoElem, caseStudyElem];

    gsap.set(navBar, { width: NAV_EXPAND_WIDTH, overwrite: false });
    gsap.set(navHideItems, {
      autoAlpha: 1,
    });
    gsap.set(containerElement, { autoAlpha: 0 });
    gsap.set(bookACallAction, {
      autoAlpha: 0,
      overflow: "hidden",
      display: "none",
    });

    const tl = gsap.timeline({
      paused: true,
      defaults: { duration: FRAME_DURATION, ease: "none" },
    });

    tl.to(navHideItems, {
      autoAlpha: 0,
      stagger: 0.05,
      overwrite: "auto",
      display: "none",
    }).to(navBar, { width: NAV_SHRINK_WIDTH }, "-=0.1");

    tl.addLabel("showBookACall");

    tl.to(
      bookACallAction,
      { autoAlpha: 1, display: "list-item" },
      "showBookACall",
    );
    tl.to(containerElement, { autoAlpha: 1 }, "showBookACall");

    let lastDirection = 0;

    const st = ScrollTrigger.create({
      onUpdate(self) {
        if (self.direction === 1 && lastDirection !== 1) {
          tl.play();
          lastDirection = 1;
        } else if (self.direction === -1 && lastDirection !== -1) {
          tl.reverse();
          lastDirection = -1;
        }
      },
    });

    return () => {
      tl.kill();
      st.kill();
      gsap.killTweensOf([
        navBar,
        ...navHideItems,
        bookACallAction,
        containerElement,
      ]);
    };
  });

  mm.add("(width < 768px)", () => {
    if (
      !navMenuToggle ||
      !mobileList ||
      !mobileContact ||
      !mobileBookACallAction
    )
      return;

    gsap.set(mobileList, {
      height: 0,
      autoAlpha: 0,
      display: "flex",
      overflow: "hidden",
    });
    gsap.set(mobileContact, { autoAlpha: 1 });

    const tlBurger = gsap.timeline({
      paused: true,
      defaults: { duration: 0.3, ease: "power2.inOut" },
    });

    tlBurger
      .to("#top-line", { rotation: 45, x: 0, y: 10 }, 0)
      .to("#middle-line", { autoAlpha: 0 }, 0)
      .to("#bottom-line", { rotation: -45, x: 0, y: -6 }, 0)
      .to(navBar, { backgroundColor: "#3c3843" }, 0)
      .to(mobileList, { height: "auto", autoAlpha: 1, duration: 0.4 }, 0)
      .to(mobileContact, { autoAlpha: 0 }, 0);

    const handleBurgerClick = () => {
      const expanded = navMenuToggle.getAttribute("aria-expanded") === "true";
      navMenuToggle.setAttribute("aria-expanded", String(!expanded));

      if (expanded) tlBurger.reverse();
      else tlBurger.play();
    };

    const handleBookACallClick = () => {
      tlBurger.reverse();
      navMenuToggle.setAttribute("aria-expanded", "false");
    };

    mobileBookACallAction.addEventListener("click", handleBookACallClick);
    navMenuToggle.addEventListener("click", handleBurgerClick);

    return () => {
      navMenuToggle.removeEventListener("click", handleBurgerClick);
      mobileBookACallAction.removeEventListener("click", handleBookACallClick);

      gsap.killTweensOf([
        mobileList,
        mobileContact,
        "#top-line",
        "#middle-line",
        "#bottom-line",
      ]);
    };
  });
</script>
