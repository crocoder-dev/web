<header
  class="fixed
    m-auto
    mx:0
    w-screen
    max-w-screen
    top-0
    md:mx-2
    md:top-1
    md:[&_[data-navhidden]]:duration-700
    md:[&_[data-navhidden]]:!overflow-hidden
    md:[&_[data-navhidden]]:ease-in-out
    md:[&_[data-navhidden='false']]:w-0
    md:[&_[data-navhidden='false']]:px-0
    md:[&_[data-navhidden='false']]:mx-0
    md:[&_[data-navhidden='']]:max-w-48
    z-50"
>
  <nav
    class="bg-[#3C3843E5]
      md:w-fit
      mx-auto
      flex
      items-center
      justify-between
      py-[10px]
      px-7
      md:px-[15px]
      md:rounded-l-[3rem]
      md:rounded-r-lg
      md:overflow-hidden
      relative
      gap-24
      md:has-[[data-navhidden]]:gap-7
      max-md:has-[input:checked]:bg-[#3c3843]"
  >
    <a class="sm:flex sm:items-center" href="/" aria-label="Crocoder Logo">
      <img
        width={63}
        height={51}
        alt="Crocoder Crocodile Logo"
        src="/images/crocoder-logo.png"
        class="h-[51px] w-auto"
      />
      <img
        width={153}
        height={24}
        alt="Crocoder Text Logo"
        src="/images/crocoder-text.svg"
        class="pl-[14px] hidden h-6 w-auto md:block
          md:[&[data-navhidden='false']]:opacity-0
          md:[&[data-navhidden='']]:opacity-100"
        data-navhidden
      />
    </a>
    <input
      id="nav-menu-toggle"
      type="checkbox"
      readonly
      class="hidden peer/menu-toggle"
    />
    <label
      for="nav-menu-toggle"
      class="md:hidden
      flex
      flex-col
      gap-1.5
      peer-checked/menu-toggle:[&>*:nth-child(1)]:rotate-45
      peer-checked/menu-toggle:[&>*:nth-child(1)]:translate-y-2
      peer-checked/menu-toggle:[&>*:nth-child(2)]:opacity-0
      peer-checked/menu-toggle:[&>*:nth-child(2)]:-translate-x-full
      peer-checked/menu-toggle:[&>*:nth-child(3)]:-translate-y-2
      peer-checked/menu-toggle:[&>*:nth-child(3)]:-rotate-45"
    >
      <span class="h-0.5 w-6 bg-neutral-50 transition-transform duration-200"
      ></span>
      <span
        class="h-0.5 w-6 bg-neutral-50 transition-[transform_opacity] duration-350"
      ></span>
      <span class="h-0.5 w-6 bg-neutral-50 transition-transform duration-200"
      ></span>
    </label>

    <div
      class="max-md:absolute max-md:hidden max-md:peer-checked/menu-toggle:flex max-md:flex-col max-md:gap-4 max-md:top-[74px] max-md:w-full max-md:py-7 bg-[#3c3843] max-md:h-[calc(100vh-74px)] max-md:right-0 md:bg-transparent md:flex md:items-center"
    >
      <ul
        data-navhidden
        class="flex flex-col md:flex-row gap-4 mx-7 md:mx-0 md:w-auto relative"
      >
        <li>
          <a
            class="font-medium text-2xl md:text-lg text-[#E8E8E8] hover:text-white"
            href="#"
          >
            For CTOs
          </a>
        </li>
        <li>
          <a
            class="font-medium text-2xl md:text-lg text-[#E8E8E8] hover:text-white"
            href="/blog"
          >
            Blog
          </a>
        </li>
      </ul>
    </div>
    <div
    class="max-md:absolute max-md:hidden max-md:peer-checked/menu-toggle:flex max-md:flex-col max-md:gap-4 max-md:top-[74px] max-md:w-full max-md:py-7 bg-[#3c3843] max-md:h-[calc(100vh-74px)] max-md:right-0 md:bg-transparent md:flex md:items-center"
  >
      <ul class="flex gap-4 md:ml-0 md:mx-0">
        <li>
          <a
            id="book-a-call-action"
            class="flex w-fit font-medium h-[45px] items-center px-4 py-2 rounded-md text-base text-center whitespace-nowrap bg-[#545664] text-[#ffffff] hover:opacity-90
            md:[&[data-navhidden='false']]:opacity-0
            md:[&[data-navhidden='']]:opacity-100
            md:[&[data-navhidden='']]:delay-100
            md:[&[data-navhidden='false']]:!w-0
            md:[&[data-navhidden='false']]:overflow-hidden
            md:[&[data-navhidden='false']]:!px-0"
            data-navhidden="false"
            href="#book-a-call-section">Book a call</a
          >
        </li>
        <li data-navhidden>
          <a
            class="flex font-medium w-fit h-[45px] items-center px-4 py-2 rounded-md text-base text-center whitespace-nowrap bg-[#FEC343] text-[#1E1A1A] hover:opacity-90"
            href="/contact"
          >
            Contact us
          </a>
        </li>
      </ul>
    </div>
  </nav>
</header>

<script is:inline>
  let lastScrollTop = 0;
  let isScroll = false;

  const allDataHidden = document.querySelectorAll("[data-navhidden]");
  const bookACallAction = document.getElementById("book-a-call-action");
  const navMenuToggle = document.getElementById("nav-menu-toggle");

  function onScroll() {
    const currentScrollTop =
      window.scrollY || document.documentElement.scrollTop;
    const valuesWrapper = document.getElementById("values-wrapper");
    const valuesWrapperTop = valuesWrapper ? valuesWrapper.offsetHeight : 0;

    // Do not request animation frame if past the top half of the page
    if (currentScrollTop > valuesWrapperTop) return;

    if (!isScroll) {
      isScroll = true;
      window.requestAnimationFrame(() => {
        handleScroll(currentScrollTop);
        isScroll = false;
      });
    }
  }

  function handleScroll(currentScrollTop) {
    if (
      currentScrollTop > lastScrollTop &&
      allDataHidden[0].getAttribute("data-navhidden") === ""
    ) {
      invertDataAttributte(allDataHidden);
    } else if (
      currentScrollTop <= lastScrollTop &&
      allDataHidden[0].getAttribute("data-navhidden") === "false"
    ) {
      invertDataAttributte(allDataHidden);
    }

    lastScrollTop = currentScrollTop <= 0 ? 0 : currentScrollTop;
  }

  function invertDataAttributte(dataHiddenNodes) {
  dataHiddenNodes.forEach((node) => {
    if (node.closest("li")?.textContent?.includes("Contact us")) return;

    const currentVal = node.getAttribute("data-navhidden");
    node.setAttribute("data-navhidden", currentVal === "" ? "false" : "");
  });
}


  function handleBookACall() {
    navMenuToggle.checked = false;
    window.navScroll = true;

    setTimeout(() => {
      window.navScroll = false;
    }, 1500);
  }

  window.addEventListener("scroll", onScroll, { passive: true });
  bookACallAction.addEventListener("click", handleBookACall);
</script>
