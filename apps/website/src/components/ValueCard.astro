---
import { Image } from "astro:assets";

interface Props {
  idx: number;
  title: string;
  content: any;
  img: {
    path: string;
    alt: string;
  };
  styles?: string | string[];
  onDark?: boolean;
  icon: string;
}

const { title, content, img, styles, onDark, icon } = Astro.props;


const images = import.meta.glob("../assets/*.*");
const src = images[`../assets${img.path}`] as any as () => Promise<{
  default: ImageMetadata;
}>;

const image = await src();
---

<section
  class={`col-span-6 rounded-2xl p-7 md:p-12 md:pb-0 max-md:max-w-[470px] mx-auto xl:p-12 xl:pb-0 pb-0 flex flex-col overflow-hidden lg:h-fit md:col-span-12 xl:col-span-4 ${styles} ${onDark ? "text-[#ffff]" : "text-secondary"}`}
>
  <div class="flex gap-7 flex-col md:flex-row xl:flex-col mb-5 xl:mb-[61px]">
    <img class="h-[72px] w-[72px] xl:h-[90px] xl:w-[90px]" src={icon} alt={icon}>
    <div>
      <h3 class="font-medium text-[28px] md:text-4xl leading-[30px] md:leading-10 mb-7">{title}</h3>
      <div class="text-base leading-7 antialiased" set:html={content.html}></div>
    </div>
  </div>
  <div class="flex justify-center">
    <Image
      class="mt-auto max-w-[466px] w-full"
      src={image.default}
      alt={img.alt}
      widths={[320, 400, 466]}
      sizes="(max-width: 767px) 100vw, (max-width: 1279px) 100vw, 33vw"
      loading="lazy"
    />
  </div>
</section>
