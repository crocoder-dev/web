---
import Base from "../layouts/base-blog.astro";
import Head from "../layouts/head.astro";
import { Picture } from "astro:assets";
import { markdownify } from "../ify";
import { getCollection } from "astro:content";
import formatDate from "../format-date";

const {
  authorName,
  authorImage,
  AuthorContent,
  createdAt,
  title,
  image,
  slug,
} = Astro.props;

const markdownPosts = await getCollection("posts");

const prefix = "/blog";

const posts = [
  ...markdownPosts.map((post) => ({
    url: `${prefix}/${post.slug}`,
    title: post.data.title,
    createdAt: new Date(post.data.createdAt),
    image: post.data.image,
    authors: post.data.authors || [],
    category: (post as any).data.category,
    slug: post.slug,
  })),
];
posts.sort(() => 0.5 - Math.random());

const recommendedPosts = posts.filter((post) => post.slug !== slug).slice(0, 3);
const dateObj = new Date(createdAt);
---

<Base>
  <Head slot={"head"} {...Astro.props} />
  <section class="py-20">
    <div class="container max-w-[1000px] px-4 md:px-8">
      <article class="row justify-center">
        <div class="md:col-10 text-center">
          <h1
            class="text-h1-sm md:text-h1 font-primary font-semibold leading-tight text-dark"
            set:html={markdownify(title)}
          />
          <ul class="mt-4 flex flex-wrap items-center justify-center text-text">
            <li class="mx-3 flex items-center flex-wrap font-medium">
              <span class="mr-2">By</span>
              <span>{authorName}</span>
              <li class="mx-3 flex items-center flex-wrap font-medium">
                {
                  dateObj && (
                    <time datetime={dateObj.toISOString()}>
                      {formatDate(dateObj)}
                    </time>
                  )
                }
              </li>
            </li>
          </ul>
        </div>

        <div class="col-12 mt-8 mb-8">
          {
            image && (
              <Picture
                src={image}
                height={500}
                width={1000}
                alt={title}
                class="rounded-lg"
                loading="eager"
                decoding="auto"
              />
            )
          }
        </div>

        <div class="md:col-10">
          <div
            class="mb-16 text-left prose max-w-none prose-headings:font-bold prose-h1:mb-4 prose-h1:text-h1-sm prose-h2:mb-4 prose-h2:mt-4 prose-h2:text-h2-sm prose-h3:mt-4 prose-h3:text-h3-sm prose-h4:mt-4 prose-h5:mb-4 prose-h6:mb-6 prose-blockquote:rounded-lg prose-blockquote:border-primary prose-blockquote:bg-theme-light prose-blockquote:px-7 prose-blockquote:py-3 prose-blockquote:text-lg prose-blockquote:leading-8 prose-pre:px-6 prose-pre:py-5 md:prose-h1:text-h1 md:prose-h2:text-h2 md:prose-h3:text-h3"
          >
            <slot />
          </div>
          <div class="flex flex-col justify-center md:flex-row items-center border-t gap-4 border-slate-200 py-8">
            <div
              class="flex items-center justify-center overflow-hidden bg-[#67a807] rounded-full min-w-[100px] w-[100px] h-[100px] md:min-w-[140px] md:w-[140px] md:h-[140px]"
            >
              {
                authorImage && (
                  <Picture
                    src={authorImage}
                    width={215}
                    alt={title}
                    loading="lazy"
                    decoding="auto"
                    class={"max-w-none h-[100px] w-[155px] md:h-[140px] md:w-[215px]"}
                  />
                )
              }
            </div>
            <div>
              <div class="text-black text-center md:text-start text-xl font-bold">{authorName}</div>
              <AuthorContent />
            </div>
          </div>
        </div>
      </article>
      <h3 class="text-4xl border-b border-slate-200 pt-8 py-4">
        Recommended posts
      </h3>
      <ol
        class="grid grid-cols-1 gap-x-8 gap-y-14 sm:grid-cols-2 md:grid-cols-3 pt-10"
      >
        {
          recommendedPosts.map(({ url, title, image }) => (
            <li class="col-span-1">
              <a class="flex flex-col gap-4" href={url}>
                <div class="overflow-hidden rounded-lg">
                  {image && (
                    <Picture
                      src={image}
                      alt={title}
                      width={1024}
                      loading="lazy"
                      decoding="auto"
                    />
                  )}
                </div>
                <h3 class="text-2xl">{title}</h3>
              </a>
            </li>
          ))
        }
      </ol>
    </div>
  </section>
  <script is:inline>
    document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
      anchor.addEventListener("click", function (e) {
        e.preventDefault();

        document.querySelector(this.getAttribute("href")).scrollIntoView({
          behavior: "smooth",
        });
      });
    });
  </script>
</Base>
